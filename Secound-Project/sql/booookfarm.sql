

CREATE USER user01 IDENTIFIED BY user01;

-- 생성한 계정에 권한 부여
GRANT RESOURCE, CONNECT  TO user01;
GRANT INSERT  ANY TABLE , UPDATE ANY TABLE
      , DELETE ANY TABLE, CREATE VIEW
      , CREATE SESSION TO user01;
      
     
-- 테이블 스페이스 사용 권한 및 용량 설정
ALTER USER user01 quota 10M ON USERS;


SELECT USERNAME FROM ALL_USERS WHERE  USERNAME = 'user01';

SELECT GRANTED_ROLE FROM DBA_ROLE_PRIVS WHERE GRANTEE = 'user01';

SELECT PRIVILEGE FROM DBA_SYS_PRIVS WHERE GRANTEE = 'user01';

SELECT * FROM DBA_USERS WHERE USERNAME = 'user01';

--맴버 테이블 생성
CREATE TABLE MEMBERS(
                        MEMBER_ID 			VARCHAR2(45) 	CONSTRAINT NN_MEMBER_ID		   NOT NULL
    ,MEMBER_PASSWORD	VARCHAR2(15)	CONSTRAINT NN_MEMBER_PASSWORD  NOT NULL
    ,MEMBER_NAME		VARCHAR2(100)	CONSTRAINT NN_MEMBER_NAME 	   NOT NULL
    ,PHONE				VARCHAR2(11)	CONSTRAINT NN_PHONE 		   NOT NULL
    ,EMAIL				VARCHAR2(50)	CONSTRAINT NN_EMAIL 		   NOT NULL
    ,POSTAL_CODE		VARCHAR2(5)		CONSTRAINT NN_POSTAL_CODE 	   NOT NULL
    ,ADDRESS			VARCHAR2(150)	CONSTRAINT NN_ADDRESS 	  	   NOT NULL
    ,DETAIL_ADDRESS		VARCHAR2(120)	CONSTRAINT NN_DETAIL_ADDRESS   NOT NULL
    ,MILEAGE			NUMBER			CONSTRAINT NN_MILEAGE		   NOT NULL
    ,SOCIAL_TYPE		VARCHAR2(5)		CONSTRAINT NN_SOCIAL_TYPE	   NOT NULL
    ,MEMBER_POSITION	VARCHAR2(9)		CONSTRAINT NN_MEMBER_POSITION  NOT NULL
    ,JOIN_DATE			DATE			DEFAULT(SYSDATE) CONSTRAINT NN_MEMBER_JOIN_DATE NOT NULL
    ,CONSTRAINT PK_MEMBER_MEMBER_ID PRIMARY KEY(MEMBER_ID)
);
ALTER TABLE MEMBERS MODIFY(MEMBER_ID VARCHAR2(45));

--BOOK 테이블 생성
CREATE TABLE BOOK(
                     BOOK_CODE 			 VARCHAR2(10)	 CONSTRAINT NN_BOOK_BOOK_CODE      NOT NULL
    ,BOOK_TITLE			 VARCHAR2(200)	 CONSTRAINT NN_BOOK_TITLE  	 	   NOT NULL
    ,BOOK_AUTHOR		 VARCHAR2(100)	 CONSTRAINT NN_BOOK_AUTHOR 	 	   NOT NULL
    ,BOOK_INFO			 CLOB			 CONSTRAINT NN_BOOK_INFO   	 	   NOT NULL
    ,BOOK_PRICE			 NUMBER 		 CONSTRAINT NN_BOOK_PRICE  	 	   NOT NULL
    ,BOOK_DISCOUNT 	 	 NUMBER			 CONSTRAINT NN_BOOK_DISCOUNT 	   NOT NULL
    ,ISBN				 VARCHAR2(13)	 CONSTRAINT NN_ISBN				   NOT NULL
    ,BOOK_CATEGORY		 VARCHAR2(60) 	 CONSTRAINT NN_BOOK_CATEGORY 	   NOT NULL
    ,STOCK				 NUMBER			 CONSTRAINT NN_STOCK	 		   NOT NULL
    ,PUBLISHER			 VARCHAR2(120)   CONSTRAINT NN_PUBLISHER	 	   NOT NULL
    ,BOOK_CONDITION		 VARCHAR2(3)	 CONSTRAINT NN_BOOK_CONDITION 	   NOT NULL
    ,BOOK_CONDITION_INFO CLOB			 CONSTRAINT NN_BOOK_CONDITION_INFO NOT NULL
    ,BOOK_IMG_PATH		 VARCHAR2(300)	 CONSTRAINT NN_BOOK_IMG_PATH 	   NOT NULL
    ,CREATE_DATE		 DATE			 DEFAULT(SYSDATE) CONSTRAINT NN_BOOK_CREATE_DATE    NOT NULL
    ,CONSTRAINT PK_BOOK_BOOK_CODE PRIMARY KEY(BOOK_CODE)
);
ALTER TABLE BOOK ADD HIT_COUNT NUMBER DEFAULT(0) CONSTRAINT NN_HIT_COUNT NOT NULL;

--주문 내역 테이블 생성
CREATE TABLE ORDER_INFO(
                           ORDER_CODE        VARCHAR2(30)    CONSTRAINT NN_ORDER_CODE             NOT NULL
    ,BOOK_CODE            CLOB            CONSTRAINT NN_ORDER_BOOK_CODE         NOT NULL
    ,BOOK_TITLE        CLOB            CONSTRAINT NN_ORDER_BOOK_TITLE       NOT NULL
    ,ORDER_QUANTITY    CLOB             CONSTRAINT NN_ORDER_QUANTITY          NOT NULL
    ,USE_MILEAGE        NUMBER            CONSTRAINT NN_USE_MILEAGE             NOT NULL
    ,SAVE_MILEAGE        NUMBER             CONSTRAINT NN_SAVE_MILEAGE              NOT NULL
    ,ORDER_PRICE        NUMBER             CONSTRAINT NN_ORDER_PRICE              NOT NULL
    ,MEMBER_ID            VARCHAR2(45)    CONSTRAINT NN_ORDER_MEMBER_ID         NOT NULL
    ,POSTAL_CODE        VARCHAR2(5)        CONSTRAINT NN_ORDER_POSTAL_CODE         NOT NULL
    ,ADDRESS            VARCHAR2(150)    CONSTRAINT NN_ORSER_ADDRESS            NOT NULL
    ,DETAIL_ADDRESS    VARCHAR2(120)    CONSTRAINT NN_ORDER_DETAIL_ADDRESS   NOT NULL
    ,PHONE                VARCHAR2(11)    CONSTRAINT NN_ORDER_PHONE             NOT NULL
    ,DELIVERY_FEE        NUMBER            CONSTRAINT NN_ORDER_DELIVERY_FEE     NOT NULL
    ,REFUNDABLE_DATE     DATE            DEFAULT(SYSDATE) CONSTRAINT NN_REFUNDABLE_DATE       NOT NULL
    ,ORDER_DATE        DATE            DEFAULT(SYSDATE) CONSTRAINT NN_ORDER_ORDER_DATE         NOT NULL
    ,CONSTRAINT PK_ORDER_ORDER_CODE PRIMARY KEY(ORDER_CODE)
);
ALTER TABLE ORDER_INFO MODIFY(MEMBER_ID VARCHAR2(45));

--환불 내역 테이블 생성
CREATE TABLE REFUND_INFO(
                            REFUND_CODE			NUMBER			CONSTRAINT NN_REFUND_CODE		     NOT NULL
    ,REFUND_PRICE			NUMBER			CONSTRAINT NN_REFUND_REFUND_PRICE    NOT NULL
    ,BOOK_CODE				VARCHAR2(10)	CONSTRAINT NN_REFUND_BOOK_CODE		 NOT NULL
    ,BOOK_TITLE	    	VARCHAR2(200)	CONSTRAINT NN_REFUND_BOOK_TITLE  	 NOT NULL
    ,BOOK_PRICE			NUMBER 		    CONSTRAINT NN_REFUND_BOOK_PRICE  	 NOT NULL
    ,BOOK_DISCOUNT     	NUMBER			CONSTRAINT NN_REFUND_BOOK_DISCOUNT   NOT NULL
    ,REFUND_QUANTITY    	NUMBER 			CONSTRAINT NN_REFUND_QUANTITY 		 NOT NULL
    ,REFUND_MILEAGE		NUMBER			CONSTRAINT NN_REFUND_MILEAGE    	 NOT NULL
    ,SUBTRACT_MILEAGE		NUMBER 			CONSTRAINT NN_SUBTRACT_MILEAGE	 	 NOT NULL
    ,MEMBER_ID				VARCHAR2(45)	CONSTRAINT NN_REFUND_MEMBER_ID		 NOT NULL
    ,POSTAL_CODE			VARCHAR2(5)		CONSTRAINT NN_REFUND_POSTAL_CODE	 NOT NULL
    ,ADDRESS				VARCHAR2(150)	CONSTRAINT NN_REFUND_ADDRESS 	  	 NOT NULL
    ,DETAIL_ADDRESS		VARCHAR2(120)	CONSTRAINT NN_REFUND_DETAIL_ADDRESS  NOT NULL
    ,PHONE					VARCHAR2(11)	CONSTRAINT NN_REFUND_PHONE			 NOT NULL
    ,DELIVERY_FEE 			NUMBER			CONSTRAINT NN_REFUND_DELIVERY_FEE	 NOT NULL
    ,CANCLE_DATE			DATE			DEFAULT(SYSDATE) CONSTRAINT NN_REFUND_CANCLE_DATE	 NOT NULL
    ,REFUND_DATE			DATE			DEFAULT(SYSDATE) CONSTRAINT NN_REFUND_REFUND_DATE	 NOT NULL
    ,CONSTRAINT PK_REFUND_REFUND_INFO PRIMARY KEY(REFUND_CODE)
);
ALTER TABLE REFUND_INFO MODIFY(MEMBER_ID VARCHAR2(45));

--장바구니 테이블 생성
CREATE TABLE BASKET(
                       BASKET_CODE		NUMBER			CONSTRAINT NN_BASKET_CODE      	  NOT NULL
    ,MEMBER_ID			VARCHAR2(45)	CONSTRAINT NN_BASKET_MEMBER_ID 	  NOT NULL
    ,BOOK_CODE			VARCHAR2(10)	CONSTRAINT NN_BASKET_BOOK_CODE 	  NOT NULL
    ,QUANTITY			NUMBER			CONSTRAINT NN_BASKET_QUANTITY  	  NOT NULL
    ,DELIVERY_FEE		NUMBER			CONSTRAINT NN_BASKET_DELIVERY_FEE NOT NULL
    ,CONSTRAINT PK_BASKET_BASKET_CODE PRIMARY KEY(BASKET_CODE)
);
ALTER TABLE BASKET MODIFY(MEMBER_ID VARCHAR2(45));

-- 최근 본 목록 테이블 생성
CREATE TABLE LAST_VIEW(
                          VIEW_CODE		NUMBER			CONSTRAINT NN_LAST_VIEW 		  NOT NULL
    ,MEMBER_ID		VARCHAR2(45)	CONSTRAINT NN_LAST_VIEW_MEMBER_ID NOT NULL
    ,BOOK_CODE      VARCHAR2(10)	DEFAULT(SYSDATE) CONSTRAINT NN_LAST_VIEW_BOOK_CODE NOT NULL
    ,VIEW_DATE		DATE			DEFAULT(SYSDATE) CONSTRAINT NN_LAST_VIEW_VIEW_DATE NOT NULL
    ,CONSTRAINT PK_LAST_VIEW_CODE PRIMARY KEY(VIEW_CODE)
);
ALTER TABLE LAST_VIEW MODIFY(MEMBER_ID VARCHAR2(45));


-- 문의 내역 테이블 생성
CREATE TABLE QUESTION_INFO(
                              QUESTION_CODE		NUMBER			CONSTRAINT NN_QUESTION_CODE		 NOT NULL
    ,QUESTION_CATEGORY  VARCHAR2(13)	CONSTRAINT NN_QUESTION_CATEGORY  NOT NULL
    ,QUESTION_TITLE		VARCHAR2(60)	CONSTRAINT NN_QUESTION_TITLE	 NOT NULL
    ,QUESTION_CONTENT	CLOB			CONSTRAINT NN_QUESTION_CONTENT	 NOT NULL
    ,MEMBER_ID			VARCHAR2(45)	CONSTRAINT NN_QUESTION_MEMBER_ID NOT NULL
    ,QUESTION_DATE		DATE			DEFAULT(SYSDATE) CONSTRAINT NN_QUESTION_DATE   NOT NULL
    ,CONSTRAINT PK_QUESTION_INFO_QUESTION_CODE PRIMARY KEY(QUESTION_CODE)
);
ALTER TABLE QUESTION_INFO MODIFY(MEMBER_ID VARCHAR2(45));

-- 문의 답변 테이블 생성
CREATE TABLE ANSWER_INFO(
                            ANSWER_CODE		NUMBER		CONSTRAINT NN_ANSWER_CODE		   NOT NULL
    ,QUESTION_CODE		NUMBER		CONSTRAINT NN_ANSWER_QUESTION_CODE NOT NULL
    ,ANSWER_CONTENT		CLOB		CONSTRAINT NN_ANSWER_CONTENT	   NOT NULL
    ,ANSWER_DATE		DATE		DEFAULT(SYSDATE) CONSTRAINT NN_ANSWER_DATE		   NOT NULL
    ,CONSTRAINT PK_ANSWER_ANSWER_INFO	PRIMARY KEY(ANSWER_CODE)
);

--공지 사항 테이블 생성
CREATE TABLE NOTICE(
                       NOTICE_CODE		NUMBER			CONSTRAINT NN_NOTICE_CODE	  NOT NULL
    ,NOTICE_TITLE		VARCHAR2(90)	CONSTRAINT NN_NOTICE_TITLE 	  NOT NULL
    ,NOTICE_CONTENT		CLOB			CONSTRAINT NN_NOTICE_CONTENT  NOT NULL
    ,VIEW_CNT			NUMBER			CONSTRAINT NN_NOTICE_VIEW_CNT NOT NULL
    ,NOTICE_DATE		DATE			DEFAULT(SYSDATE) CONSTRAINT NN_NOTICE_DATE	  NOT NULL
    ,CONSTRAINT PK_NOTICE_NOTICE_CODE	PRIMARY KEY(NOTICE_CODE)
);

--보관함 테이블 생성
CREATE TABLE LOCKER(
                       LOCKER_CODE         NUMBER            CONSTRAINT NN_LOCKER_CODE      NOT NULL
    ,MEMBER_ID        VARCHAR2(45)                CONSTRAINT NN_LOCKER_MEMBER_ID   NOT NULL
    ,BOOK_CODE        VARCHAR2(10)                CONSTRAINT NN_LOCKER_BOOK_CODE  NOT NULL
    ,QUANTITY        NUMBER            CONSTRAINT NN_LOCKER_QUANTITY    NOT NULL
    ,DELIVERY_FEE        NUMBER            CONSTRAINT NN_LOCKER_DELIVERY_FEE NOT NULL
    ,CONSTRAINT PK_LOCKER_LOCKER_CODE PRIMARY KEY(LOCKER_CODE)
);
ALTER TABLE LOCKER MODIFY(MEMBER_ID VARCHAR2(45));


-- 시퀀스 생성
CREATE SEQUENCE SQU_BOOK NOCACHE;
CREATE SEQUENCE SQU_ORDER_INFO NOCACHE;
CREATE SEQUENCE SQU_REFUND_INFO NOCACHE;
CREATE SEQUENCE SQU_LAST_VIEW NOCACHE;
CREATE SEQUENCE SQU_QUESTION_INFO NOCACHE;
CREATE SEQUENCE SQU_ANSWER_INFO NOCACHE;
CREATE SEQUENCE SQU_NOTICE NOCACHE;

-- 시퀀스 삭제
DROP SEQUENCE SQU_BOOK NOCACHE;
DROP SEQUENCE SQU_ORDER_INFO NOCACHE;
DROP SEQUENCE SQU_REFUND_INFO NOCACHE;
DROP SEQUENCE SQU_LAST_VIEW NOCACHE;
DROP SEQUENCE SQU_QUESTION_INFO NOCACHE;
DROP SEQUENCE SQU_ANSWER_INFO NOCACHE;
DROP SEQUENCE SQU_NOTICE NOCACHE;


-- 테이블 조회
SELECT * FROM MEMBERS;
SELECT * FROM BOOK;
SELECT * FROM ORDER_INFO;
SELECT * FROM REFUND_INFO;
SELECT * FROM BASKET;
SELECT * FROM LAST_VIEW;
SELECT * FROM QUESTION_INFO;
SELECT * FROM ANSWER_INFO;
SELECT * FROM NOTICE;


-- 테이블 삭제
DROP TABLE MEMBERS;
DROP TABLE BOOK;
DROP TABLE ORDER_INFO;
DROP TABLE REFUND_INFO;
DROP TABLE BASKET;
DROP TABLE LAST_VIEW;
DROP TABLE QUESTION_INFO;
DROP TABLE ANSWER_INFO;
DROP TABLE NOTICE;

-- 제약조건 확인
SELECT * FROM USER_CONSTRAINTS;


---- 테스트 정보 추가 ------
INSERT INTO MEMBERS VALUES ('admin','00000000','관리자','01000000000','admin@naver.com','00000','관리자아파트','100호',0,'naver','관리자', SYSDATE);


INSERT INTO MEMBERS VALUES ('user01','00000001','빨강이','01000000001','user01@naver.com','00001','서울아파트','101호',5000,'naver','일반', SYSDATE);
INSERT INTO MEMBERS VALUES ('user02','00000002','노랑이','01000000002','user02@naver.com','00002','대전아파트','102호',6000,'kakao','일반', SYSDATE);
INSERT INTO MEMBERS VALUES ('user03','00000003','초록이','01000000003','user03@naver.com','00003','대구아파트','103호',7000,'kakao','일반', SYSDATE);
INSERT INTO MEMBERS VALUES ('user04','00000004','파랭이','01000000004','user04@naver.com','00004','부산아파트','104호',5000,'naver','일반', SYSDATE);
INSERT INTO MEMBERS VALUES ('user05','00000005','주황이','01000000005','user05@naver.com','00005','경기도아파트','105호',6000,'kakao','일반', SYSDATE);
INSERT INTO MEMBERS VALUES ('user06','00000006','남색놈','01000000006','user06@naver.com','00006','광주아파트','106호',7000,'naver','일반', SYSDATE);
INSERT INTO MEMBERS VALUES ('user07','00000007','보라놈','01000000007','user07@naver.com','00007','세종아파트','107호',6000,'kakao','일반', SYSDATE);
INSERT INTO MEMBERS VALUES ('user08','00000008','검정놈','01000000008','user08@naver.com','00008','성남아파트','108호',7000,'kakao','일반', SYSDATE);
INSERT INTO MEMBERS VALUES ('user09','00000009','형광놈','01000000009','user09@naver.com','00009','인천아파트','109호',3000,'kakao','일반', SYSDATE);
INSERT INTO MEMBERS VALUES ('user10','00000010','무지개','01000000010','user10@naver.com','00010','판교아파트','110호',2000,'naver','일반', SYSDATE);


DELETE 

